// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)    // User dihapus, komentar juga dihapus
  userId    Int
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  datetime  DateTime
  thumbnail String
  slug      String   @unique
  author   User     @relation(fields: [authorId], references: [id])
  authorId Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  comments Comment[]
  updatedAt  DateTime  @updatedAt  // Otomatis diperbarui ketika artikel diubah

}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  articles  Article[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())

  Comment Comment[]

  Article Article[]
}

enum Role {
  ADMIN
  USER
}
